package com.zhixin.controller;


import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.session.Session;
import org.apache.shiro.subject.Subject;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;


import com.zhixin.base.BaseController;
import com.zhixin.entity.Page;
import com.zhixin.interceptor.Token;
import com.zhixin.model.Doc_Factory;
import com.zhixin.model.PageBean;
import com.zhixin.model.Sys_Picture;
import com.zhixin.model.Sys_User;
import com.zhixin.model.Wx_BindCustomer;
import com.zhixin.model.X_Eventmsg;
import com.zhixin.right_utils.Const;
import com.zhixin.right_utils.PageData;
import com.zhixin.service.FactoryService;
import com.zhixin.service.PicturesService;
import com.zhixin.service.SendMsgService;
import com.zhixin.service.WxBindCustomerService;
import com.zhixin.tools.TimestampUtil;
import com.zhixin.tools.TokenProccessor;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
@Token(remove=true)
@Controller
@RequestMapping(value="/wxuser")
public class WxBindCustomerController  extends BaseController{
	
	@Resource(name="wxbindcustomerService")
	private  WxBindCustomerService wxbindcustomerService;
	
	@Resource(name="factoryService")
	private FactoryService factoryService;
	
	
	@Resource(name="picturesService")
	private PicturesService picturesService;
	
	@Resource(name="sendmsgservice")
	private SendMsgService	sendmsgservice;
	
	
	
	
	/**
	 * 去修改绑定页面
	 */
	@RequestMapping(value="/goEditU")
	public ModelAndView goEditU(){
		ModelAndView mv = this.getModelAndView();
		PageData pd = new PageData();
		pd = this.getPageData();
		logBefore(logger, "WxBindCustomerController_goEditU");
		try {
			mv.setViewName("system/appuser/appuser_edit");
			mv.addObject("msg", "editU");
			mv.addObject("pd", pd);
			mv.addObject("roleList", new ArrayList());
		} catch (Exception e) {
			logger.error(e.toString(), e);
		}						
		return mv;
	}
	
	
	
	/**
	 * 修改审核状态
	 */
	@RequestMapping(value="/editU")
	public ModelAndView editU(PrintWriter out) throws Exception{
		logBefore(logger, "WxBindCustomerController_editU");
		ModelAndView mv = this.getModelAndView();
		PageData pd = new PageData();
		pd = this.getPageData();
		try{
			String status =pd.getString("STATUS");
			String wxbin_id=pd.getString("USER_ID");
			Wx_BindCustomer wx_bind =wxbindcustomerService.findwxbindcustomerByID(wxbin_id);
			if("1".equals(status))
				wx_bind.setStatus(1);
			else
				wx_bind.setStatus(0);
			wxbindcustomerService.update_wxbindUserStatus(wx_bind);
			mv.addObject("msg","success");
			mv.setViewName("save_result");
		} catch(Exception e){
			logger.error(e.toString(), e);
		}
		return mv;
	}
	
	
	
	/**
	 * 保存访问手机首页
	 * @return
	 */
	@RequestMapping(value="/phone_index")
	public ModelAndView toLogin()throws Exception{
		logBefore(logger, "WxBindCustomerController_phone_index");
		ModelAndView mv = this.getModelAndView();
		PageData pd = new PageData();
		pd = this.getPageData();
		try{
			Subject currentUser = SecurityUtils.getSubject();
			Session session = currentUser.getSession();
			String pd_wx_token=pd.getString("wx_token");
			String wx_token =(String)session.getAttribute("wx_token");
			String flagID =pd.getString("id");
			String factory_IDs =pd.getString("factory_IDs");
			//String wxusername = pd.getString("wxusername");
			String originalID =pd.getString("originalID");
			String phone  =pd.getString("phone");
			String openid =pd.getString("openid");
			String email =pd.getString("email");
			String namepinyin =pd.getString("username");
			String old_facids_str =pd.getString("old_facids_str");
			String [] arrayids=factory_IDs.split(",");
			String factory_ID ="";
			List <Doc_Factory> listfactorys= factoryService.findFactorysByIDS(arrayids);
			Set setfac=new HashSet<Doc_Factory>(listfactorys);
			if("".equals(flagID)){
				Wx_BindCustomer wx_bind = new Wx_BindCustomer();
				wx_bind.setBinddate(TimestampUtil.getnowtime());
				wx_bind.setStatus(0);
				wx_bind.setEmail(email);
				//wx_bind.setBindcustomer_factorys(bindcustomer_factorys);
				//wx_bind.setFactory(factory);
				//TODO 关联对象修改
				//wx_bind.setFactorys(setfac);
				wx_bind.setNamepinyin(namepinyin);
				wx_bind.setOpenid(openid);
				wx_bind.setPhone(phone);
				//wx_bind.setWxUserName(wxusername);
				if(pd_wx_token.equals(wx_token)){
					session.removeAttribute("wx_token");
					wxbindcustomerService.save_wxbindUser(wx_bind,listfactorys);
				}
			}
			else{
				Wx_BindCustomer new_wx_bind =wxbindcustomerService.findwxbindcustomerByID(flagID);
				new_wx_bind.setEmail(email);
				//已经绑定的，不从新关联;
				//TODO 关联对象修改
				//new_wx_bind.setFactorys(setfac);
				new_wx_bind.setNamepinyin(namepinyin);
				new_wx_bind.setOpenid(openid);
				new_wx_bind.setPhone(phone);
				//new_wx_bind.setWxUserName(wxusername);
				if(pd_wx_token.equals(wx_token)){
					session.removeAttribute( "wx_token");
					wxbindcustomerService.update_wxbindUser(new_wx_bind,listfactorys,old_facids_str);
				}
			}
			List<Sys_Picture> listpictures =picturesService.findPicturesByFactoryids(arrayids);
			for(Sys_Picture picture:listpictures){
				if(picture.getFlag()==1){
					listpictures.remove(picture);
					mv.addObject("picturelog",picture);
					break;
				}
			}
			//pd.put("fromUserName", pd.getString("openid"));
			pd.put("fromUserName", openid);
			pd.put("toUserName", originalID);
			mv.addObject("listpictures",listpictures);
			mv.addObject("pd",pd);
			mv.setViewName("tinybar/wxadmin/index");
		} catch(Exception e){
			logger.error(e.toString(), e);
		}
		return mv;
	}
	
	/**
	 * 注册
	 * @param restar
	 * @param response
	 */
	@RequestMapping(value="/register")
	public void register(HttpServletResponse response)throws Exception{
		ModelAndView mv = this.getModelAndView();
		PageData pd = new PageData();
		pd = this.getPageData();
		try{
			Subject currentUser = SecurityUtils.getSubject();
			Session session = currentUser.getSession();
			String pd_wx_token=pd.getString("wx_token");
			String wx_token =(String)session.getAttribute("wx_token");
			String flagID =pd.getString("id");
			String factory_IDs =pd.getString("factory_IDs");
			//String wxusername = pd.getString("wxusername");
			String originalID =pd.getString("originalID");
			String phone  =pd.getString("phone");
			String openid =pd.getString("openid");
			String email =pd.getString("email");
			String namepinyin =pd.getString("username");
			String old_facids_str =pd.getString("old_facids_str");
			String [] arrayids=factory_IDs.split(",");
			String factory_ID ="";
			List <Doc_Factory> listfactorys= factoryService.findFactorysByIDS(arrayids);
			Set setfac=new HashSet<Doc_Factory>(listfactorys);
			if("".equals(flagID)){
				Wx_BindCustomer wx_bind = new Wx_BindCustomer();
				wx_bind.setBinddate(TimestampUtil.getnowtime());
				wx_bind.setStatus(0);
				wx_bind.setEmail(email);
				//wx_bind.setBindcustomer_factorys(bindcustomer_factorys);
				//wx_bind.setFactory(factory);
				//TODO 关联对象修改
				//wx_bind.setFactorys(setfac);
				wx_bind.setNamepinyin(namepinyin);
				wx_bind.setOpenid(openid);
				wx_bind.setPhone(phone);
				//wx_bind.setWxUserName(wxusername);
				if(pd_wx_token.equals(wx_token)){
					session.removeAttribute("wx_token");
					wxbindcustomerService.save_wxbindUser(wx_bind,listfactorys);
				}
			}
			else{
				Wx_BindCustomer new_wx_bind =wxbindcustomerService.findwxbindcustomerByID(flagID);
				new_wx_bind.setEmail(email);
				//已经绑定的，不从新关联;
				//TODO 关联对象修改
				//new_wx_bind.setFactorys(setfac);
				new_wx_bind.setNamepinyin(namepinyin);
				new_wx_bind.setOpenid(openid);
				new_wx_bind.setPhone(phone);
				//new_wx_bind.setWxUserName(wxusername);
				if(pd_wx_token.equals(wx_token)){
					session.removeAttribute( "wx_token");
					wxbindcustomerService.update_wxbindUser(new_wx_bind,listfactorys,old_facids_str);
				}
			}
			
			
			List list1 = new ArrayList<>();
		    JSONArray arr = JSONArray.fromObject(list1);
			PrintWriter out;
			response.setCharacterEncoding("utf-8");
			out = response.getWriter();
			String json = arr.toString();
			out.write(json);
			out.flush();
			out.close();
			
			
			
			
			
			
			
		} catch(Exception e){
			e.printStackTrace();
			logger.error(e.toString(), e);
		}
	}
		
	
	
	
	
	
	
	
	/**
	 * 保存用户
	 */
	@RequestMapping(value="/saveU")
	public ModelAndView saveU(PrintWriter out) throws Exception{
		logBefore(logger, "WxBindCustomerController_saveU");
		ModelAndView mv = this.getModelAndView();
		PageData pd = new PageData();
		pd = this.getPageData();
		try{
			Sys_User newuser = new Sys_User();
			mv.setViewName("tinybar/wxadmin/index");
			mv.addObject("binduserlist", new ArrayList());
			mv.addObject("pd", pd);
		} catch(Exception e){
			logger.error(e.toString(), e);
		}
		return mv;
	}
	
	
	
	/**
	 * 到达手机系统主页
	 */
	@RequestMapping(value="/tophoneindex")
	public ModelAndView toEdit( String factory_ID )throws Exception{
		logBefore(logger, "WxBindCustomerController_tophoneindex");
		System.out.println("===========到达手机系统主页===========");
		ModelAndView mv = this.getModelAndView();
		PageData pd = new PageData();
		try{
			pd = this.getPageData();
			//String open_id =pd.getString("fromUserName");
			//String toUserName = pd.getString("toUserName");
			String open_id ="oKeyUxEgSYnl1j1d0bt_cwJsIdMo";
			String toUserName="gh_d6c13daeefce";
			List<Sys_Picture> listpictures =picturesService.findPicturesByOpenid(open_id);
			//如果不是绑定用户，查询集团下工厂的宣传图
			if(listpictures.size()==0){
				listpictures =picturesService.findPictureByOrginalID(toUserName);
			}
			for(Sys_Picture picture:listpictures){
				if(picture.getFlag()==1){
					listpictures.remove(picture);
					mv.addObject("picturelog",picture);
					break;
				}
			}
			pd.put("fromUserName", open_id);
			pd.put("toUserName", toUserName);
			mv.addObject("pd", pd);
			mv.setViewName("tinybar/wxadmin/index");
			mv.addObject("listpictures",listpictures);
		} catch(Exception e){
			logger.error(e.toString(), e);
		}
		return mv;
	}
	
	
	
	
	

	/**
	 * 显示用户列表(用户组)
	 */
	@RequestMapping(value="/listusers")
	public ModelAndView listUsers(Page page)throws Exception{
		logBefore(logger, "WxBindCustomerController_listusers");
		ModelAndView mv = this.getModelAndView();
		PageData pd = new PageData();
		pd = this.getPageData();
		//按照条件检索
		try{
			String status ="";
			String namepinyin ="";
			if(pd.toString().contains("STATUS"))
				status = pd.getString("STATUS");
			if(pd.toString().contains("NAMEPY"))
				namepinyin = pd.getString("NAMEPY");
			Subject currentUser = SecurityUtils.getSubject();
			Session session = currentUser.getSession();
			Sys_User user = (Sys_User) session.getAttribute(Const.SESSION_USER);
			String factoryid =user.getDoc_factory().getId();
			//分页查询
			String currentPage="";
			if(pd.toString().contains("currentPage"))
				 currentPage =pd.getString("currentPage");
			else
				currentPage ="1";
			PageBean pagecustomer =wxbindcustomerService.findpagewxbindcustomer(factoryid,currentPage,status,namepinyin);
			pd.put("pagecustomer", pagecustomer);
			mv.setViewName("system/appuser/appuser_list");
			mv.addObject("binduserlist", pagecustomer.getRecordList());
			mv.addObject("pd", pd);
		} catch(Exception e){
			logger.error(e.toString(), e);
		}
		return mv;
	}
	
	/**
	 * 客户关注微信公众号注册
	 */
	@RequestMapping(value="/goAddU")
	public ModelAndView goAddU(HttpServletRequest request,
			HttpServletResponse response)throws Exception{
		logBefore(logger, "WxBindCustomerController_goAddU");
		ModelAndView mv = this.getModelAndView();
		PageData pd = new PageData();
		pd = this.getPageData();
		try{
			String fromUserName = pd.getString("fromUserName");
			String toUserName = pd.getString("toUserName");
			//String fromUserName="oKeyUxEgSYnl1j1d0bt_cwJsIdMo";
			//String toUserName="gh_d6c13daeefce";
			String openid = fromUserName;
			//防止重复提交
			Subject currentUser = SecurityUtils.getSubject();
			Session session = currentUser.getSession();
			String wx_token = TokenProccessor.getInstance().makeToken();
			
			session.setAttribute("wx_token", wx_token);
			
			//查询出已经选中的工厂列表
			List<Doc_Factory> oldfactorys =     wxbindcustomerService.findFactoryByOpenID(openid);
			//获取绑定账号
			Wx_BindCustomer wx_bindcustomer = wxbindcustomerService.findwxbindcustomerByOpenID(openid);
			String originalID =toUserName;  //集团的原始id
			List<Doc_Factory>  factoryList=wxbindcustomerService.findFactoryByOriginalID(originalID);
			//pd.put("wxusername", wx_bindcustomer.getWxUserName());
			pd.put("susernumber", wx_bindcustomer.getSuserNumber());
			pd.put("phone", wx_bindcustomer.getPhone());
			pd.put("email", wx_bindcustomer.getEmail());
			pd.put("id", wx_bindcustomer.getId());
			pd.put("wx_token", wx_token);
			pd.put("username", wx_bindcustomer.getNamepinyin());
			//把已关注的工厂id 
			String old_facids_str ="";
			for(Doc_Factory fac:oldfactorys){
				if(fac.getIs_bind()==1){
					old_facids_str+=fac.getId();
				}
			}
			pd.put("old_facids_str", old_facids_str);
			pd.put("fromUserName", openid);
			pd.put("toUserName", toUserName);

			mv.setViewName("tinybar/appuser/appuser_rest");
			mv.addObject("msg", "saveU");
			mv.addObject("pd", pd);
			mv.addObject("factoryList", factoryList);
			mv.addObject("oldfactoryList", oldfactorys);
			mv.addObject("wx_bindcustomer", wx_bindcustomer);
		} catch(Exception e){
			logger.error(e.toString(), e);
		}
		return mv;
	}
	
	
	/**
	 * 查看详情Message details msgDeatils
	 */
	@RequestMapping(value="/msgDeatils")
	public ModelAndView msgDeatils(HttpServletRequest request,
			HttpServletResponse response)throws Exception{
		logBefore(logger, "WxBindCustomerController_msgDeatils");
		ModelAndView mv = this.getModelAndView();
		PageData pd = new PageData();
		pd = this.getPageData();
		try{
			String msg_id =pd.getString("msg_id");
			X_Eventmsg x_eventmsg =sendmsgservice.findmsgbyID(msg_id);
			System.out.println(x_eventmsg.getContent());
			String content =x_eventmsg.getContent();
			JSONObject jb = JSONObject.fromObject(content);
			String type = pd.getString("type");
			String html_str="";
			//开单
			if("1".equals(type)){
				html_str="<table><tr>"+
					"<td>客户名字：</td>"+
					"<td>"+jb.get("CusName").toString()+"</td>"+
				"</tr>"+
				"<tr>"+
					"<td>订单编号：</td>"+
					"<td>"+jb.get("billid").toString()+"</td>"+
				"</tr>"+
				"<tr>"+
					"<td>物料编号：</td>"+
					"<td>"+jb.get("stockno").toString()+"</td>"+
				"</tr>"+
				"<tr>"+
					"<td>物料名称：</td>"+
					"<td>"+jb.get("stockname").toString()+"</td>"+
				"</tr>"+
				"<tr>"+
					"<td>客户资金：</td>"+
					"<td>"+jb.get("cusaccount").toString()+"</td>"+
				"</tr>"+
			"</table>";
			//出厂
			}else if("2".equals(type)){
				html_str="<table><tr>"+
						"<td>客户名字：</td>"+
						"<td>"+jb.get("CusName").toString()+"</td>"+
					"</tr>"+
					"<tr>"+
						"<td>订单编号：</td>"+
						"<td>"+jb.get("billid").toString()+"</td>"+
					"</tr>"+
					"<tr>"+
						"<td>车牌号码：</td>"+
						"<td>"+jb.get("truck").toString()+"</td>"+
					"</tr>"+
					"<tr>"+
						"<td>物料名称：</td>"+
						"<td>"+jb.get("stockname").toString()+"</td>"+
					"</tr>"+
					"<tr>"+
						"<td>运输商务：</td>"+
						"<td>"+jb.get("transname").toString()+"</td>"+
					"</tr>"+
				"</table>";
			//报表
			}else if("3".equals(type)){
				JSONArray ja = jb.getJSONArray("content");
				html_str+="报表时间段：<br>"+jb.get("start_date").toString()+"至"+jb.get("end_date").toString()+"<br><table>";
				for (int i = 0; i < ja.size(); i++){
					html_str +="<tr>"+
					"<td>物料编号：</td>"+
					"<td>"+ja.getJSONObject(i).getString("stockno")+"</td>"+
				"</tr>"+
				"<tr>"+
					"<td>物料名称：</td>"+
					"<td>"+ja.getJSONObject(i).getString("stockname")+"</td>"+
				"</tr>"+
				"<tr>"+
					"<td>车次：</td>"+
					"<td>"+ja.getJSONObject(i).getString("qty")+"</td>"+
				"</tr>"+
				"<tr>"+
					"<td>总量：</td>"+
					"<td>"+ja.getJSONObject(i).getString("count")+"</td>"+
				"</tr>";
				
			
				}
				html_str+="</table>";
			}else if("4".equals(type)){
				html_str="<table><tr>"+
						"<td>客户名字：</td>"+
						"<td>"+jb.get("CusName").toString()+"</td>"+
					"</tr>"+
					"<tr>"+
						"<td>订单编号：</td>"+
						"<td>"+jb.get("billid").toString()+"</td>"+
					"</tr>"+
					"<tr>"+
						"<td>物料名称：</td>"+
						"<td>"+jb.get("stockname").toString()+"</td>"+
					"</tr>"+
				"</table>";
			//报表
			}else{
				html_str+="无数据！";
			}
			pd.put("html_str", html_str);
			mv.setViewName("tinybar/appuser/msg_deatils");
			mv.addObject("msg", "list_msg");
			mv.addObject("pd", pd);
		} catch(Exception e){
			logger.error(e.toString(), e);
		}
		return mv;

	
	}
	
}
